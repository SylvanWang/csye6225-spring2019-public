{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "EC2ServiceRole": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "CodeDeployEC2ServiceRole"
          }
        ],
        "InstanceProfileName": "EC2ServiceRole"
      }
    },
    "myEC2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": "csye6225",
        "SubnetId": {
          "Ref": "publicSubnetId1"
        },
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "csye6225webapp",
              "GroupId"
            ]
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": "20"
            }
          }
        ],
        "DisableApiTermination": "false",
        "ImageId": {
          "Ref": "imageId"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "EC2ServiceRole"
        },
        "Tags": [
          {
            "Key": {
              "Ref": "EC2TagKey"
            },
            "Value": {
              "Ref": "EC2TagValue"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                "sudo yum update -y",
                "sudo yum install ruby -y",
                "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install",
                "chmod +x ./install",
                "sudo ./install auto",
                "sudo service codedeploy-agent start",

                "cd /etc/profile.d/",
                "sudo touch webappEnv.sh",
                "sudo chmod 777 webappEnv.sh",
                "echo '#!/bin/bash' >> webappEnv.sh",
                { "Fn::Sub" : ["echo export DB_NAME=${DatabaseName} >> webappEnv.sh", { "DatabaseName" : {"Ref" : "DBName" }}]},
                { "Fn::Sub" : ["echo export USER_NAME=${DatabaseUser} >> webappEnv.sh", { "DatabaseUser" : {"Ref" : "DBUser" }}]},
                { "Fn::Sub" : ["echo export DB_PASS=${DatabasePass} >> webappEnv.sh", { "DatabasePass" : {"Ref" : "DBPassword" }}]},
                { "Fn::Sub" : ["echo export DB_HOST=${DatabaseHost} >> webappEnv.sh", { "DatabaseHost" : {"Fn::GetAtt": ["myRDSInstance","Endpoint.Address"]}}]},
                { "Fn::Sub" : ["echo export PORT=${ApplicationPort} >> webappEnv.sh", { "ApplicationPort" : {"Ref" : "Appport" }}]},
                "echo export NODE_ENV=dev >> webappEnv.sh",

                "sudo groupadd nodeUser",
                "sudo useradd -M -s /bin/nologin -g nodeUser -d /opt/webapps nodeUser",

                "cd /etc/systemd/system/",
                "sudo touch nodeserver.service",
                "sudo chmod 777 nodeserver.service",
                "sudo echo '[Unit]' > nodeserver.service",
                "sudo echo 'Description=Node.js Http Server for csye6225' >> nodeserver.service",
                "sudo echo 'After=syslog.target network.target' >> nodeserver.service",
                "sudo echo [Service] >> nodeserver.service",
                "sudo echo Type=simple >> nodeserver.service",
                "sudo echo User=nodeUser >> nodeserver.service",
                "sudo echo RestartSec=10 >> nodeserver.service",
                "sudo echo Restart=on-failure >> nodeserver.service",
                { "Fn::Sub" : ["sudo echo Environment=PORT=${ApplicationPort} >> nodeserver.service", { "ApplicationPort" : {"Ref" : "Appport" }}]},
                { "Fn::Sub" : ["sudo echo Environment=DB_NAME=${DatabaseName} >> nodeserver.service", { "DatabaseName" : {"Ref" : "DBName" }}]},
                { "Fn::Sub" : ["sudo echo Environment=USER_NAME=${DatabaseUser} >> nodeserver.service", { "DatabaseUser" : {"Ref" : "DBUser" }}]},
                { "Fn::Sub" : ["sudo echo Environment=DB_PASS=${DatabasePass} >> nodeserver.service", { "DatabasePass" : {"Ref" : "DBPassword" }}]},
                { "Fn::Sub" : ["sudo echo Environment=DB_HOST=${DatabaseHost} >> nodeserver.service", { "DatabaseHost" : {"Fn::GetAtt": ["myRDSInstance","Endpoint.Address"]}}]},
                { "Fn::Sub" : ["sudo echo Environment=S3BUCKET=${S3BUCKET} >> nodeserver.service", { "S3BUCKET" : {"Ref":"myS3Bucket"}}]},
                "sudo echo 'ExecStart=/usr/bin/node /opt/webapps/index.js' >> nodeserver.service",
                "sudo echo '[Install]' >> nodeserver.service",
                "sudo echo 'WantedBy=multi-user.target' >> nodeserver.service",
                "sudo systemctl daemon-reload",
                "sudo systemctl enable nodeserver.service"
              ]
            ]
          }
        }
      }
    },
    "csye6225webapp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "csye6225-webapp",
        "GroupDescription": "Security Group for Web Services",
        "VpcId": {
          "Ref": "vpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "csye6225rds": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "csye6225-rds",
        "GroupDescription": "Security Group for DB Service",
        "VpcId": {
          "Ref": "vpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": {
              "Ref": "DBport"
            },
            "ToPort": {
              "Ref": "DBport"
            },
            "SourceSecurityGroupId": {
              "Fn::GetAtt": [
                "csye6225webapp",
                "GroupId"
              ]
            }
          }
        ]
      }
    },
    "myDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Database subnet group for RDS instance",
        "DBSubnetGroupName": "Subnet for RDS instances",
        "SubnetIds": [
          {
            "Ref": "privateSubnetId1"
          },
          {
            "Ref": "privateSubnetId2"
          }
        ]
      }
    },
    "myRDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Engine": "MySQL",
        "DBInstanceClass": "db.t2.medium",
        "MultiAZ": "false",
        "DBInstanceIdentifier": {
          "Ref": "DBInstanceIdentifier"
        },
        "MasterUsername": {
          "Ref": "DBUser"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "DBSubnetGroupName": "Subnet for RDS instances",
        "PubliclyAccessible": "true",
        "DBName": {
          "Ref": "DBName"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "csye6225rds"
          }
        ],
        "AllocatedStorage": "100"
      }
    },
   "myDynamoDB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "TableName": "csye6225",
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        }
      }
    },
    "myS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "DomainName"
              },
              "csye6225.com"
            ]
          ]
        }
      }
    },
    "CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "CodeDeployServiceRole",
        "ManagedPolicyArns": [
          {
            "Ref": "AWSCodeDeployRoleARN"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codedeploy.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "CodeDeployEC2ServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "CodeDeployEC2ServiceRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
      "CircleCICodeDeploy": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyName": "CircleCI-Code-Deploy",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "codedeploy:RegisterApplicationRevision",
                  "codedeploy:GetApplicationRevision"
                ],
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:codedeploy:",
                        {
                          "Ref": "AWSREGION"
                        },":",
                        {
                          "Ref": "AWSACCOUNTID"
                        },
                        ":application:",
                        {
                          "Ref": "ApplicationName"
                        }
                      ]
                    ]
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "codedeploy:CreateDeployment",
                  "codedeploy:GetDeployment"
                ],
                "Resource": [
                  "*"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "codedeploy:GetDeploymentConfig"
                ],
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:codedeploy:",
                        {
                          "Ref": "AWSREGION"
                        },":",
                        {
                          "Ref": "AWSACCOUNTID"
                        },
                        ":deploymentconfig:CodeDeployDefault.OneAtATime"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:codedeploy:",
                        {
                          "Ref": "AWSREGION"
                        },":",
                        {
                          "Ref": "AWSACCOUNTID"
                        },":",
                        ":deploymentconfig:CodeDeployDefault.HalfAtATime"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:codedeploy:",
                        {
                          "Ref": "AWSREGION"
                        },":",
                        {
                          "Ref": "AWSACCOUNTID"
                        },":",
                        ":deploymentconfig:CodeDeployDefault.AllAtOnce"
                      ]
                    ]
                  }
                ]
              }
            ]
          },
          "Users": ["circleci"],
          "Roles": [
            {
              "Ref": "CodeDeployEC2ServiceRole"
            }
          ]
        }
      },
      
    "CodeDeployApplication": {
        "Type": "AWS::CodeDeploy::Application",
        "Properties": {
        "ApplicationName" : "csye6225-webapp",
          "ComputePlatform": "Server"
        }
    },
    "CodeDeployDeploymentGroup": {
      "Type" : "AWS::CodeDeploy::DeploymentGroup",
      "Properties" : {
        "ApplicationName" : "csye6225-webapp",
        "AutoRollbackConfiguration": { 
                 "Enabled": true,
                 "Events": ["DEPLOYMENT_FAILURE"]
               },

        "DeploymentConfigName" : "CodeDeployDefault.AllAtOnce",
        "DeploymentGroupName" : "csye6225-webapp-deployment",
        "DeploymentStyle" : {
        "DeploymentType": "IN_PLACE",
        "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
        },
        "Ec2TagFilters" : [{
            "Key": {
              "Ref": "EC2TagKey"
             },
            "Value": {
              "Ref": "EC2TagValue"
             },
            "Type" : "KEY_AND_VALUE"
          }       
        ],
        "ServiceRoleArn" : {
             "Fn::GetAtt": [
               "CodeDeployServiceRole",
                "Arn"
              ]
        }
      }
    },
    "CodeDeployEC2S3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CodeDeploy-EC2-S3",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:Get*",
                "s3:List*",
                "s3:Put*",
                "s3:Delete*"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CodeDeployEC2ServiceRole"
          }
        ]
      }
    },
    "CircleCIUploadToS3": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyName": "CircleCI-Upload-To-S3",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          },
          "Users": ["circleci"],
          "Roles": [
            {
              "Ref": "CodeDeployEC2ServiceRole"
            }
          ]
        }
      },
  },
  "Parameters": {
    "imageId": {
      "Type": "String",
      "Default": "default-image-id"
    },
    "publicSubnetId1": {
      "Type": "String",
      "Default": "default-subnet-id"
    },
    "privateSubnetId1": {
      "Type": "String",
      "Default": "default-subnet-id"
    },
    "privateSubnetId2": {
      "Type": "String",
      "Default": "default-subnet-id"
    },
    "vpcId": {
      "Type": "String",
      "Default": "default-vpc-id"
    },
    "DBport": {
      "Type": "Number",
      "Default": "3306"
    },
    "DBUser": {
      "Type": "String",
      "Default": "csye6225master"
    },
    "DBPassword": {
      "Type": "String",
      "Default": "csye6225password"
    },
    "DBInstanceIdentifier": {
      "Type": "String",
      "Default": "csye6225-spring2019"
    },
    "DBName": {
      "Type": "String",
      "Default": "csye6225"
    },
    "DomainName": {
      "Type": "String",
      "Default": "csye6225-spring2019-default.me."
    },
    "EC2TagKey" : {
      "Type" : "String",
      "Default" : "EC2-Tag-Key"
    },
    "EC2TagValue" : {
      "Type" : "String",
      "Default" : "EC2-Tag-Value"
    },
    "AWSCodeDeployRoleARN": {
      "Type": "String",
      "Default": "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
    },
    "Appport" : {
      "Type" : "Number",
      "Default" : "3000"
    },
    "AWSREGION": {
        "Type": "String",
        "Default": "us-east-1"
    },
    "AWSACCOUNTID": {
        "Type": "String",
        "Default": "273656506688"
    },
    "ApplicationName": {
        "Type": "String",
        "Default": "csye6225-spring2019"
    }
  }
}
